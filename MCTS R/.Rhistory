points(p2$x, p2$y, pch = "+", col="pink")
points(p3$x, p3$y, pch = "+", col="orange")
p0 <- binorm0(1000)
p1 <- binorm1(1000, 3)
p2 <- binorm2(1000, 3, 2)
p3 <- binorm3(1000, 3, 2, pi/6)
plot(p0$x, p0$y, xlim = c(-10,10), ylim = c(-10,10), xlab = "x", ylab = "y", pch = "+")
points(p1$x, p1$y, pch = "+", col="red")
points(p2$x, p2$y, pch = "+", col="pink")
points(p3$x, p3$y, pch = "+", col="orange")
p3 <- binorm3(1000, 3, 2, pi/3)
plot(p0$x, p0$y, xlim = c(-10,10), ylim = c(-10,10), xlab = "x", ylab = "y", pch = "+")
points(p1$x, p1$y, pch = "+", col="red")
points(p2$x, p2$y, pch = "+", col="pink")
points(p3$x, p3$y, pch = "+", col="orange")
m <- floor(rnorm(1,0,10))
m <- rnorm(1,0,10)
m <- rnorm(1,1,10)
source('~/Developper/r/normale.R')
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
main3()
main3()
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
main3()
f(c(4,6))
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
main3()
plot(log10(res$dyn), type = "l", xlab = "iteration", ylab = "f(m)")
source('~/Developper/r/normale.R')
plot(log10(res$dyn), type = "l", xlab = "iteration", ylab = "f(m)")
main3()
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
main3()
main3()
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
main3()
main3()
source('~/Developper/r/normale.R')
source('~/Developper/r/normale.R')
main3()
main3()
main3()
main3()
source('~/Developper/r/normale.R')
main3()
source('~/Developper/r/normale.R')
evolutionStrategy(0,500,0.1)
source('~/Developper/r/normale.R')
evolutionStrategy(0,500,0.1)
source('~/Developper/r/normale.R')
evolutionStrategy(0,500,0.1)
source('~/Developper/r/normale.R')
evolutionStrategy(0,500,0.1)
source('~/Developper/r/normale.R')
main4()
source('~/Developper/r/normale.R')
main4()
main4()
function (x, type = c("O", "I", "F", "M", "2"))
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
modele10 <- lm(y ~ poly(x, 10))
prediction10  <- predict(modele10, data.frame(x=z))
lines(z, prediction10, col="orange")
modele10 <- lm(y ~ poly(x, 10))
prediction10  <- predict(modele10, data.frame(x=z))
lines(z, prediction10, col="orange")
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
ensemble_apprentissage2 <- vecteurPoints(100)
x2 <- ensemble_apprentissage2[,1]
y2 <- ensemble_apprentissage2[,2]
lines(z, prediction, col="green")
lines(z, prediction2, col="red")
lines(z, prediction6, col="blue")
lines(z, prediction10, col="orange")
#erreur1a <- sqrt((sum((y - predict(modele1, data.frame(x = x)))^2))/length(x))
#erreur2a <- sqrt((sum((y - predict(modele2, data.frame(x = x)))^2))/length(x))
#erreur6a <- sqrt((sum((y - predict(modele6, data.frame(x = x)))^2))/length(x))
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/TP 0/Exo 1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
help table
help(table)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
print(iris)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
help(print)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
print(randomUniforme)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
help(order)
print(iris)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
summary(irisR)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
summary(irisR)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
summary(irisN)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
print(iris_app)
print(iris_test)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
print(iris_app)
print(iris_test)
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
plot(iris[,1:4],bg=c("red","green3","blue")[iris[,5]],
pch=c(21,25,24)[iris[,5]],main="Les iris de Fisher",
labels=c("Longueur\nsépale","Largeur\nsépale",
"Longueur\npétale","Largeur\npétale"))
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
source('~/Developper/r/Apprentissage artificiel/k plus proches voisins/Exo1.R')
runif(2,0,1)
install.packages("neuralnet")
rdn <- neuralnet(setosa + versicolor + virginica ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, irisApprentissage, hidden = 3)
require(neuralnet)
rdn <- neuralnet(setosa + versicolor + virginica ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, irisApprentissage, hidden = 3)
source('~/Developper/r/Apprentissage artificiel/réseau de neurones/neuronet.R')
rdn <- neuralnet(setosa + versicolor + virginica ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, irisApprentissage, hidden = 3)
summary(rdn)
require(neuralnet)
set.seed(42)
mySample <- sample(1:150,50)
irisApprentissage <- iris[mySample,]
irisTest <- iris[-mySample,]
irisApprentissage$setosa <- irisApprentissage$Species == "setosa"
irisApprentissage$virginica <- irisApprentissage$Species == "virginica"
irisApprentissage$versicolor <- irisApprentissage$Species == "versicolor"
irisApprentissage$Species <- NULL
head(irisApprentissage)
installed.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
install.packages("neuralnet")
require(neuralnet)
update.packages()
setwd("~/NetBeansProjects/SHOT/MCTS R")
MTCSk1 <- read.table("~/NetBeansProjects/SHOT/MCTS R/MTCSk1.txt", quote="\"", comment.char="")
View(MTCSk1)
plot (MTCSk1$v2)
plot (MTCSk1$V2)
hist MTCSk1
hist MTCSk1$V2
hist (MTCSk1$V2)
mcts1 <- read.csv("MCTSk1", header = FALSE)
mcts1 <- read.csv("MCTSk1.txt", header = FALSE)
View(mcts1)
mcts1 <- read.csv("MCTSk1.txt", header = FALSE, sep = " ")
View(mcts1)
mcts01 <- read.csv("MCTSk01.txt", header = FALSE, sep = " ")
mcts03 <- read.csv("MCTSk03.txt", header = FALSE, sep = " ")
mcts08 <- read.csv("MCTSk08.txt", header = FALSE, sep = " ")
boxplot(mcts1)
boxplot(mcts1$V2)
boxplot(mcts1)
boxplot(mcts1$V2)
boxplot(mcts1$V2, horizontal = TRUE)
plot(mcts1$V2)
history(mcts1)
history(mcts1)
history(mcts1$V2)
history(mcts1)
hist(mcts1$V2)
hist(mcts1)
hist(mcts1$V2, title("MCTS pour k = 1"))
hist(mcts1$V2, title("MCTS pour k = 1"))
hist(mcts1$V2, title("MCTS pour k = 1"))
hist(mcts1$V2, main = "test")
hist(mcts1$V2, main = "MCTS pour k = 1")
hist(mcts1$V2, main = "MCTS -> k = 1")
hist(mcts1$V2, main = "MCTS -> k = 1", plot = true)
hist(mcts1$V2, main = "MCTS -> k = 1", labels = FALSE)
hist(mcts1$V2, main = "MCTS -> k = 1")
hist(mcts1$V2, main = "MCTS -> k = 1", xlim = c(35,64))
hist(mcts1$V2, main = "MCTS -> k = 1", xlim = c(0,60))
hist(mcts1$V2, main = "MCTS -> k = 1")
boxplot(mcts1$V2)
boxplot( c(mcts1$V2, mcts01$V2))
mctsBoxPlot$V1 <-mcts1$V2
mctsBoxPlot$V1 <-mcts1[,]
mctsBoxPlot <-mcts1[,]
View(mctsBoxPlot)
mctsBoxPlot <-mcts1[1,]
View(mctsBoxPlot)
mctsBoxPlot <-mcts1[,1]
mctsBoxPlot <-mcts1[,2]
mctsBoxPlot$1 <-mcts1[,2]
mctsBoxPlot$prem <-mcts1[,2]
mctsBoxPlot$prem <-bind( mcts1[,2])
mctsBoxPlot <-bind( mcts1[,2])
mctsBoxPlot <-mcts1[,2]
mctsBoxPlot <-cbind(mcts01$V2)
View(mctsBoxPlot)
mctsBoxPlot <-mcts1[,2]
mctsBoxPlot <-cbind(mcts01,V2)
mctsBoxPlot$03 <- mcts03[,2]
trial <- matrix(c(mcts01$V2,mcts03$V2,mcts08$V2,mcts1$V2), ncol=4)
View(trial)
View(mcts01)
boxplot( trial)
boxplot(trial, names(c("t", "r", "j", "l")))
boxplot(trial, names=c("t", "r", "j", "l"))
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"))
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), title="tt")
xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Car Milage Data",xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Moynne de MCTS en fonction de K",xlab="Number of Cylinders", ylab="Miles Per Gallon")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Moyenne de MCTS en fonction de K",xlab="K", ylab="Miles Per Gallon")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Moyenne de MCTS en fonction de K",xlab="Valeur de K", ylab="Résultats")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="MCTS en fonction de K",xlab="Valeur de K", ylab="Résultats")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Monte Carlo Tree Search en fonction de K",xlab="Valeur de K", ylab="Résultats")
plot(trial)
hist(trial)
plot(mcts1$V2~mcts1$V1)
plot(mcts1$V2~mcts1$V1, type="n")
lines(mcts1)
lines(mcts1[100,])
lines(mcts1[100,])
lines(mcts1[:,100])
lines(mcts1[:100])
lines(mcts1[100])
plot(mcts1$V2~mcts1$V1, type="l")
plot(mcts1$V2~mcts1$V1, type="l")
plot(mcts1$V2~mcts1$V1, type="l", xlim=100)
plot(mcts1$V2~mcts1$V1, type="l", xlim=c(0,100)
plot(mcts1$V2~mcts1$V1, type="l", xlim=c(0,100))
plot(mcts1, type="l", xlim=c(0,100))
plot(mcts1, type="l", xlim=c(0,100), col="blue")
plot(mcts1, type="l", xlim=c(0,100), col="blue", name="nom")
plot(trial, type="l", xlim=c(0,100), col="blue", ylab)
plot(trial, type="l", xlim=c(0,100), col="blue", ylab)
plot(mcts01, type="l", xlim=c(0,100), col="blue", ylab)
plot(mcts01, type="l", xlim=c(0,100), col="blue")
lines(mcts03, col="red")
lines(mcts08, col="gree")
lines(mcts08, col="green")
plot(mcts01, type="l", xlim=c(0,100), col="blue")
lines(mcts03, col="pink")
lines(mcts08, col="red")
lines(mcts1, col="purple")
lines(mcts03, col="darkgreen")
lines(mcts1, col="yellow")
plot(mcts01, type="l", xlim=c(0,100), col="blue")
lines(mcts03, col="darkgreen")
lines(mcts08, col="red")
lines(mcts1, col="yellow")
lines(mcts1, col="brown")
yellow
lines(mcts08, col="red")
lines(mcts1, col="yellow")
plot(mcts01, type="l", col="blue")
lines(mcts03, col="darkgreen")
lines(mcts08, col="red")
lines(mcts1, col="yellow")
legend()
legend(legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
legend(0, 20, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
legend(10, 20, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
legend(10, 30, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
plot(mcts01, type="l", col="blue")
lines(mcts03, col="darkgreen")
lines(mcts08, col="red")
lines(mcts1, col="yellow")
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"))
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"), lty=1:4, cex=0.8)
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"), lty=1:4)
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "yellow"), lty=1)
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "brown"), lty=1)
plot(mcts01, type="l", col="blue", xlim=c(0.50))
plot(mcts01, type="l", col="blue", xlim=50)
plot(mcts01, type="l", col="blue", xlim=c(0,100))
lines(mcts03, col="darkgreen")
lines(mcts08, col="red")
lines(mcts1, col="brown")
legend(10, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "brown"), lty=1)
legend(0, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "brown"), lty=1)
plot(mcts01, type="l", col="blue", xlim=c(0,100))
lines(mcts03, col="darkgreen")
lines(mcts08, col="red")
lines(mcts1, col="brown")
legend(0, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "brown"), lty=1)
source('~/NetBeansProjects/SHOT/MCTS R/MCTS.r')
lines(mcts1, col="brown")
legend(0, 25, legend=c("K = 0.1", "K = 0.3", "K = 0.8", "K = 1"), col=c("blue", "darkgreen", "red", "brown"), lty=1)
source('~/NetBeansProjects/SHOT/MCTS R/MCTS.r')
source('~/NetBeansProjects/SHOT/MCTS R/MCTS.r')
source('~/NetBeansProjects/SHOT/MCTS R/MCTS.r')
source('~/NetBeansProjects/SHOT/MCTS R/MCTS.r')
hist(mcts1$V2, main = "MCTS -> k = 1")
hist(mcts1$V2, main = "MCTS -> k = 1", xlab = "tt")
hist(mcts1, main = "MCTS -> k = 1", xlab = "")
hist(mcts1, main = "MCTS -> k = 1", xlab = "s")
$V
hist(mcts1$V2, main = "MCTS -> k = 1", xlab = "")
hist(trial, main = "MCTS -> k = 1", xlab = "")
mcts1$V2
hist(mcts1$V2, main = "MCTS -> k = 1", xlab = "")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Monte Carlo Tree Search en fonction de K",xlab="Valeur de K", ylab="Score")
hist(mcts1$V2, main = "MCTS -> k = 1", xlab = "Score")
hist(mcts1$V2, main = "MCTS -> k = 1", xlab = "Score", ylab = "Fréquence")
hist(mcts1$V2, main = "MCTS avec k = 1", xlab = "Score", ylab = "Fréquence")
boxplot(trial, names=c("0.1", "0.3", "0.8", "1"), main="Monte Carlo Tree Search en fonction de K",xlab="Valeur de K", ylab="Score")
hist(mcts01$V2, main = "MCTS avec k = 0.1", xlab = "Score", ylab = "Fréquence")
hist(mcts03$V2, main = "MCTS avec k = 0.3", xlab = "Score", ylab = "Fréquence")
hist(mcts08$V2, main = "MCTS avec k = 0.8", xlab = "Score", ylab = "Fréquence")
hist(mcts1$V2, main = "MCTS avec k = 1", xlab = "Score", ylab = "Fréquence")
hist(mcts01$V2, main = "MCTS avec k = 0.1", xlab = "Score", ylab = "Fréquence")
hist(mcts03$V2, main = "MCTS avec k = 0.3", xlab = "Score", ylab = "Fréquence")
hist(mcts08$V2, main = "MCTS avec k = 0.8", xlab = "Score", ylab = "Fréquence")
